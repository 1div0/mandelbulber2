<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Form</class>
 <widget class="QWidget" name="Form">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>889</width>
    <height>4704</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string notr="true">testing_log</string>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout">
   <property name="spacing">
    <number>2</number>
   </property>
   <property name="leftMargin">
    <number>2</number>
   </property>
   <property name="topMargin">
    <number>2</number>
   </property>
   <property name="rightMargin">
    <number>2</number>
   </property>
   <property name="bottomMargin">
    <number>2</number>
   </property>
   <item>
    <widget class="MyGroupBox" name="groupCheck_transf_function_enabledN_false">
     <property name="toolTip">
      <string/>
     </property>
     <property name="title">
      <string>abs() Cont&amp;rols</string>
     </property>
     <property name="checkable">
      <bool>true</bool>
     </property>
     <layout class="QVBoxLayout" name="verticalLayout_54">
      <property name="spacing">
       <number>2</number>
      </property>
      <property name="leftMargin">
       <number>2</number>
      </property>
      <property name="topMargin">
       <number>2</number>
      </property>
      <property name="rightMargin">
       <number>2</number>
      </property>
      <property name="bottomMargin">
       <number>2</number>
      </property>
      <item>
       <layout class="QGridLayout" name="gridLayout" columnstretch="0,1,1">
        <property name="verticalSpacing">
         <number>2</number>
        </property>
        <item row="3" column="0">
         <widget class="MyCheckBox" name="checkBox_transf_function_enabledAz_false">
          <property name="text">
           <string notr="true">abs(z.z)</string>
          </property>
         </widget>
        </item>
        <item row="2" column="1">
         <widget class="MySpinBox" name="spinboxInt_transf_start_iterations_Y">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="maximum">
           <number>999</number>
          </property>
         </widget>
        </item>
        <item row="1" column="0">
         <widget class="MyCheckBox" name="checkBox_transf_function_enabledAx_false">
          <property name="text">
           <string notr="true">abs(z.x)</string>
          </property>
         </widget>
        </item>
        <item row="2" column="0">
         <widget class="MyCheckBox" name="checkBox_transf_function_enabledAy_false">
          <property name="text">
           <string notr="true">abs(z.y)</string>
          </property>
         </widget>
        </item>
        <item row="3" column="2">
         <widget class="MySpinBox" name="spinboxInt_transf_stop_iterations_Z">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="maximum">
           <number>999</number>
          </property>
         </widget>
        </item>
        <item row="1" column="1">
         <widget class="MySpinBox" name="spinboxInt_transf_start_iterations_X">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="maximum">
           <number>999</number>
          </property>
         </widget>
        </item>
        <item row="1" column="2">
         <widget class="MySpinBox" name="spinboxInt_transf_stop_iterations_X">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="maximum">
           <number>999</number>
          </property>
         </widget>
        </item>
        <item row="3" column="1">
         <widget class="MySpinBox" name="spinboxInt_transf_start_iterations_Z">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="maximum">
           <number>999</number>
          </property>
         </widget>
        </item>
        <item row="2" column="2">
         <widget class="MySpinBox" name="spinboxInt_transf_stop_iterations_Y">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="maximum">
           <number>999</number>
          </property>
         </widget>
        </item>
        <item row="0" column="2">
         <widget class="QLabel" name="label_250">
          <property name="text">
           <string>Stop at iteration:</string>
          </property>
         </widget>
        </item>
        <item row="0" column="1">
         <widget class="QLabel" name="label_251">
          <property name="text">
           <string>Start at iteration:</string>
          </property>
         </widget>
        </item>
       </layout>
      </item>
     </layout>
    </widget>
   </item>
   <item>
    <layout class="QGridLayout" name="gridLayout_79" columnstretch="0,1">
     <property name="spacing">
      <number>2</number>
     </property>
     <item row="3" column="0">
      <widget class="QLabel" name="label_297">
       <property name="text">
        <string>invSC:</string>
       </property>
      </widget>
     </item>
     <item row="3" column="1">
      <widget class="MyDoubleSpinBox" name="spinbox_transf_scaleF_1">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="prefix">
        <string/>
       </property>
       <property name="suffix">
        <string/>
       </property>
       <property name="decimals">
        <number>6</number>
       </property>
       <property name="minimum">
        <double>-99.998999999999995</double>
       </property>
       <property name="maximum">
        <double>99.998999999999995</double>
       </property>
       <property name="singleStep">
        <double>0.100000000000000</double>
       </property>
      </widget>
     </item>
     <item row="5" column="0">
      <widget class="QLabel" name="label_295">
       <property name="text">
        <string>06t:</string>
       </property>
      </widget>
     </item>
     <item row="2" column="1">
      <widget class="MyDoubleSpinBox" name="spinbox_transf_scaleG_1">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="prefix">
        <string/>
       </property>
       <property name="suffix">
        <string/>
       </property>
       <property name="decimals">
        <number>6</number>
       </property>
       <property name="minimum">
        <double>-99.998999999999995</double>
       </property>
       <property name="maximum">
        <double>99.998999999999995</double>
       </property>
       <property name="singleStep">
        <double>0.100000000000000</double>
       </property>
      </widget>
     </item>
     <item row="2" column="0">
      <widget class="QLabel" name="label_120">
       <property name="text">
        <string>maxh</string>
       </property>
      </widget>
     </item>
     <item row="5" column="1">
      <widget class="MyDoubleSpinBox" name="spinbox_transf_minimum_radius_06">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="prefix">
        <string/>
       </property>
       <property name="suffix">
        <string/>
       </property>
       <property name="decimals">
        <number>6</number>
       </property>
       <property name="minimum">
        <double>-99.998999999999995</double>
       </property>
       <property name="maximum">
        <double>99.998999999999995</double>
       </property>
       <property name="singleStep">
        <double>0.100000000000000</double>
       </property>
      </widget>
     </item>
     <item row="4" column="1">
      <widget class="MyDoubleSpinBox" name="spinbox_transf_scaleA_2">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="prefix">
        <string/>
       </property>
       <property name="suffix">
        <string/>
       </property>
       <property name="decimals">
        <number>6</number>
       </property>
       <property name="minimum">
        <double>-99.998999999999995</double>
       </property>
       <property name="maximum">
        <double>99.998999999999995</double>
       </property>
       <property name="singleStep">
        <double>0.100000000000000</double>
       </property>
      </widget>
     </item>
     <item row="4" column="0">
      <widget class="QLabel" name="label_299">
       <property name="text">
        <string>a2:</string>
       </property>
      </widget>
     </item>
    </layout>
   </item>
   <item>
    <layout class="QGridLayout" name="gridLayout_2" columnstretch="0,0,0">
     <property name="verticalSpacing">
      <number>2</number>
     </property>
     <item row="2" column="2">
      <widget class="QFrame" name="frame">
       <property name="frameShape">
        <enum>QFrame::StyledPanel</enum>
       </property>
       <property name="frameShadow">
        <enum>QFrame::Raised</enum>
       </property>
      </widget>
     </item>
     <item row="0" column="1">
      <widget class="MySpinBox" name="spinboxInt_transf_int8_X">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="font">
        <font>
         <weight>50</weight>
         <bold>false</bold>
        </font>
       </property>
       <property name="maximum">
        <number>250</number>
       </property>
      </widget>
     </item>
     <item row="0" column="0">
      <widget class="QLabel" name="label_296">
       <property name="text">
        <string>int 8x n</string>
       </property>
      </widget>
     </item>
     <item row="1" column="1">
      <widget class="MySpinBox" name="spinboxInt_transf_int_6">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="font">
        <font>
         <weight>50</weight>
         <bold>false</bold>
        </font>
       </property>
       <property name="maximum">
        <number>250</number>
       </property>
      </widget>
     </item>
     <item row="2" column="1">
      <widget class="MyCheckBox" name="checkBox_transf_function_enabledBx_false">
       <property name="text">
        <string>bx false inner</string>
       </property>
      </widget>
     </item>
     <item row="1" column="0">
      <widget class="QLabel" name="label_298">
       <property name="text">
        <string>int6 sym</string>
       </property>
      </widget>
     </item>
    </layout>
   </item>
   <item>
    <layout class="QGridLayout" name="gridLayout_34" columnstretch="0,0,0">
     <property name="spacing">
      <number>2</number>
     </property>
     <item row="1" column="0">
      <widget class="QLabel" name="label_266">
       <property name="text">
        <string>Offset:</string>
       </property>
      </widget>
     </item>
     <item row="0" column="1">
      <widget class="QLabel" name="label_123">
       <property name="text">
        <string notr="true">x</string>
       </property>
      </widget>
     </item>
     <item row="0" column="2">
      <widget class="MyDoubleSpinBox" name="spinbox3_transf_offset_000_x">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="prefix">
        <string/>
       </property>
       <property name="suffix">
        <string/>
       </property>
       <property name="decimals">
        <number>6</number>
       </property>
       <property name="minimum">
        <double>-99.989999999999995</double>
       </property>
       <property name="maximum">
        <double>99.989999999999995</double>
       </property>
       <property name="singleStep">
        <double>0.100000000000000</double>
       </property>
      </widget>
     </item>
     <item row="1" column="1">
      <widget class="QLabel" name="label_124">
       <property name="text">
        <string notr="true">y</string>
       </property>
      </widget>
     </item>
     <item row="2" column="1">
      <widget class="QLabel" name="label_119">
       <property name="text">
        <string notr="true">z</string>
       </property>
      </widget>
     </item>
     <item row="1" column="2">
      <widget class="MyDoubleSpinBox" name="spinbox3_transf_offset_000_y">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="prefix">
        <string/>
       </property>
       <property name="suffix">
        <string/>
       </property>
       <property name="decimals">
        <number>6</number>
       </property>
       <property name="minimum">
        <double>-99.989999999999995</double>
       </property>
       <property name="maximum">
        <double>99.989999999999995</double>
       </property>
       <property name="singleStep">
        <double>0.100000000000000</double>
       </property>
      </widget>
     </item>
     <item row="2" column="2">
      <widget class="MyDoubleSpinBox" name="spinbox3_transf_offset_000_z">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="prefix">
        <string/>
       </property>
       <property name="suffix">
        <string/>
       </property>
       <property name="decimals">
        <number>6</number>
       </property>
       <property name="minimum">
        <double>-99.989999999999995</double>
       </property>
       <property name="maximum">
        <double>99.989999999999995</double>
       </property>
       <property name="singleStep">
        <double>0.100000000000000</double>
       </property>
      </widget>
     </item>
    </layout>
   </item>
   <item>
    <widget class="MyGroupBox" name="groupCheck_analyticDE_enabled_false">
     <property name="title">
      <string>Analytic D&amp;E tweak controls</string>
     </property>
     <property name="checkable">
      <bool>true</bool>
     </property>
     <layout class="QVBoxLayout" name="verticalLayout_14" stretch="0">
      <property name="spacing">
       <number>2</number>
      </property>
      <property name="leftMargin">
       <number>2</number>
      </property>
      <property name="topMargin">
       <number>2</number>
      </property>
      <property name="rightMargin">
       <number>2</number>
      </property>
      <property name="bottomMargin">
       <number>2</number>
      </property>
      <item>
       <layout class="QGridLayout" name="gridLayout_27" columnstretch="0,0,1">
        <property name="spacing">
         <number>2</number>
        </property>
        <item row="2" column="2">
         <widget class="MyDoubleSpinBox" name="spinbox_analyticDE_offset_0">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="prefix">
           <string/>
          </property>
          <property name="suffix">
           <string/>
          </property>
          <property name="decimals">
           <number>6</number>
          </property>
          <property name="minimum">
           <double>-99.989999999999995</double>
          </property>
          <property name="maximum">
           <double>99.989999999999995</double>
          </property>
          <property name="singleStep">
           <double>0.100000000000000</double>
          </property>
         </widget>
        </item>
        <item row="1" column="2">
         <widget class="MyDoubleSpinBox" name="spinbox_analyticDE_scale_1">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="prefix">
           <string/>
          </property>
          <property name="suffix">
           <string/>
          </property>
          <property name="decimals">
           <number>6</number>
          </property>
          <property name="minimum">
           <double>0.000000000000000</double>
          </property>
          <property name="maximum">
           <double>99.989999999999995</double>
          </property>
          <property name="singleStep">
           <double>0.100000000000000</double>
          </property>
         </widget>
        </item>
        <item row="1" column="0" colspan="2">
         <widget class="QLabel" name="label_182">
          <property name="text">
           <string>scale1:</string>
          </property>
         </widget>
        </item>
        <item row="2" column="0" colspan="2">
         <widget class="QLabel" name="label_177">
          <property name="text">
           <string>offset0:</string>
          </property>
         </widget>
        </item>
        <item row="0" column="2">
         <widget class="MyDoubleSpinBox" name="spinbox_transf_scale_2">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Minimum" vsizetype="Maximum">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="prefix">
           <string/>
          </property>
          <property name="suffix">
           <string/>
          </property>
          <property name="decimals">
           <number>6</number>
          </property>
          <property name="minimum">
           <double>-99.998999999999995</double>
          </property>
          <property name="maximum">
           <double>99.998999999999995</double>
          </property>
          <property name="singleStep">
           <double>0.100000000000000</double>
          </property>
         </widget>
        </item>
       </layout>
      </item>
     </layout>
    </widget>
   </item>
   <item>
    <widget class="MyGroupBox" name="groupCheck_info">
     <property name="title">
      <string>Informa&amp;tion</string>
     </property>
     <property name="flat">
      <bool>false</bool>
     </property>
     <property name="checkable">
      <bool>true</bool>
     </property>
     <layout class="QVBoxLayout" name="verticalLayout_2">
      <property name="spacing">
       <number>2</number>
      </property>
      <property name="leftMargin">
       <number>2</number>
      </property>
      <property name="topMargin">
       <number>2</number>
      </property>
      <property name="rightMargin">
       <number>2</number>
      </property>
      <property name="bottomMargin">
       <number>2</number>
      </property>
      <item>
       <widget class="QLabel" name="label_information_general">
        <property name="text">
         <string notr="true">&lt;p&gt;testing log&lt;/p&gt;&lt;table&gt;
&lt;/table&gt;
&lt;h3&gt;Code&lt;/h3&gt;</string>
        </property>
        <property name="wordWrap">
         <bool>true</bool>
        </property>
        <property name="openExternalLinks">
         <bool>true</bool>
        </property>
        <property name="textInteractionFlags">
         <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByMouse</set>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QLabel" name="label_code_content">
        <property name="styleSheet">
         <string notr="true">border-style: outset; border-width: 2px; border-radius: 3px; border-color: black; background-color: #fff5ee; padding: 4px;</string>
        </property>
        <property name="text">
         <string notr="true">&lt;body style=&quot;background-color:#fff5ee&quot;&gt;
&lt;pre style=&quot;color:#000000; background-color:#fff5ee;  font-family:'Courier New',monospace;&quot;&gt;&lt;span style=&quot;color:#2e8b57; font-weight:bold&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#00008f&quot;&gt;TestingLogIteration&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;CVector4 &lt;span style=&quot;color:#676767&quot;&gt;&amp;amp;&lt;/span&gt;z&lt;span style=&quot;color:#676767&quot;&gt;,&lt;/span&gt; &lt;span style=&quot;color:#2e8b57; font-weight:bold&quot;&gt;const&lt;/span&gt; sFractal &lt;span style=&quot;color:#676767&quot;&gt;*&lt;/span&gt;fractal&lt;span style=&quot;color:#676767&quot;&gt;,&lt;/span&gt; sExtendedAux &lt;span style=&quot;color:#676767&quot;&gt;&amp;amp;&lt;/span&gt;aux&lt;span style=&quot;color:#676767&quot;&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#676767&quot;&gt;{&lt;/span&gt;

  &lt;span style=&quot;color:#2929cc&quot;&gt;//chebyshev&lt;/span&gt;
  &lt;span style=&quot;color:#2e8b57; font-weight:bold&quot;&gt;double&lt;/span&gt; tmp &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;0.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;;&lt;/span&gt;
  &lt;span style=&quot;color:#2e8b57; font-weight:bold&quot;&gt;double&lt;/span&gt; F &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; z&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;x &lt;span style=&quot;color:#676767&quot;&gt;/&lt;/span&gt; z&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;y&lt;span style=&quot;color:#676767&quot;&gt;;&lt;/span&gt;
  &lt;span style=&quot;color:#2e8b57; font-weight:bold&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;z&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;y &lt;span style=&quot;color:#676767&quot;&gt;==&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;0.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;)&lt;/span&gt; tmp &lt;span style=&quot;color:#676767&quot;&gt;=(&lt;/span&gt;z&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;x &lt;span style=&quot;color:#676767&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;0.0&lt;/span&gt; &lt;span style=&quot;color:#676767&quot;&gt;?&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;0.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;4.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;);&lt;/span&gt;
  &lt;span style=&quot;color:#2e8b57; font-weight:bold&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#00008f&quot;&gt;fabs&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;F&lt;span style=&quot;color:#676767&quot;&gt;) &amp;lt;&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;1.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;)&lt;/span&gt;
  &lt;span style=&quot;color:#676767&quot;&gt;{&lt;/span&gt;
    &lt;span style=&quot;color:#2e8b57; font-weight:bold&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;z&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;y &lt;span style=&quot;color:#676767&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;0.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;)&lt;/span&gt; tmp &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;2.0&lt;/span&gt; &lt;span style=&quot;color:#676767&quot;&gt;-&lt;/span&gt; F&lt;span style=&quot;color:#676767&quot;&gt;;&lt;/span&gt;
    &lt;span style=&quot;color:#2e8b57; font-weight:bold&quot;&gt;else&lt;/span&gt; tmp &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;6.0&lt;/span&gt; &lt;span style=&quot;color:#676767&quot;&gt;-&lt;/span&gt; F&lt;span style=&quot;color:#676767&quot;&gt;;&lt;/span&gt;
  &lt;span style=&quot;color:#676767&quot;&gt;}&lt;/span&gt;
  &lt;span style=&quot;color:#2e8b57; font-weight:bold&quot;&gt;else&lt;/span&gt;
  &lt;span style=&quot;color:#676767&quot;&gt;{&lt;/span&gt;
    F &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; z&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;y &lt;span style=&quot;color:#676767&quot;&gt;/&lt;/span&gt; z&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;x&lt;span style=&quot;color:#676767&quot;&gt;;&lt;/span&gt;
    &lt;span style=&quot;color:#2e8b57; font-weight:bold&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;z&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;x &lt;span style=&quot;color:#676767&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;0.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;)&lt;/span&gt; tmp &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#00008f&quot;&gt;fmod&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;F&lt;span style=&quot;color:#676767&quot;&gt;,&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;8.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;);&lt;/span&gt;
    &lt;span style=&quot;color:#2e8b57; font-weight:bold&quot;&gt;else&lt;/span&gt; tmp &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;4.0&lt;/span&gt; &lt;span style=&quot;color:#676767&quot;&gt;+&lt;/span&gt; F&lt;span style=&quot;color:#676767&quot;&gt;;&lt;/span&gt;
  &lt;span style=&quot;color:#676767&quot;&gt;}&lt;/span&gt;

  tmp &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; tmp &lt;span style=&quot;color:#676767&quot;&gt;+&lt;/span&gt; fractal&lt;span style=&quot;color:#676767&quot;&gt;-&amp;gt;&lt;/span&gt;transformCommon&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;scaleA1&lt;span style=&quot;color:#676767&quot;&gt;;&lt;/span&gt;
  &lt;span style=&quot;color:#2e8b57; font-weight:bold&quot;&gt;double&lt;/span&gt; Length2 &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#00008f&quot;&gt;max&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#00008f&quot;&gt;fabs&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;z&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;x&lt;span style=&quot;color:#676767&quot;&gt;),&lt;/span&gt; &lt;span style=&quot;color:#00008f&quot;&gt;fabs&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;z&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;y&lt;span style=&quot;color:#676767&quot;&gt;));&lt;/span&gt;

  &lt;span style=&quot;color:#2e8b57; font-weight:bold&quot;&gt;double&lt;/span&gt; C &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#00008f&quot;&gt;fmod&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;tmp&lt;span style=&quot;color:#676767&quot;&gt;,&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;8.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;);&lt;/span&gt;
  C &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#00008f&quot;&gt;fabs&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;C &lt;span style=&quot;color:#676767&quot;&gt;-&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;4.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;) -&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;2.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;;&lt;/span&gt;
  z&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;x &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#00008f&quot;&gt;clamp&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;C&lt;span style=&quot;color:#676767&quot;&gt;, -&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;1.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;,&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;1.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;) *&lt;/span&gt; Length2&lt;span style=&quot;color:#676767&quot;&gt;;&lt;/span&gt;

  &lt;span style=&quot;color:#2e8b57; font-weight:bold&quot;&gt;double&lt;/span&gt; S &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; tmp &lt;span style=&quot;color:#676767&quot;&gt;-&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;2.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;;&lt;/span&gt;
  S &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#00008f&quot;&gt;fmod&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;S&lt;span style=&quot;color:#676767&quot;&gt;,&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;8.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;);&lt;/span&gt;
  S &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#00008f&quot;&gt;fabs&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;S &lt;span style=&quot;color:#676767&quot;&gt;-&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;4.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;) -&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;2.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;;&lt;/span&gt;
  z&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;y &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#00008f&quot;&gt;clamp&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;S&lt;span style=&quot;color:#676767&quot;&gt;, -&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;1.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;,&lt;/span&gt; &lt;span style=&quot;color:#ff1493&quot;&gt;1.0&lt;/span&gt;&lt;span style=&quot;color:#676767&quot;&gt;) *&lt;/span&gt; Length2&lt;span style=&quot;color:#676767&quot;&gt;;&lt;/span&gt;


  &lt;span style=&quot;color:#2929cc&quot;&gt;/*CVector4 c = aux.const_c;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  if (fractal-&amp;gt;transformCommon.functionEnabledFalse)&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    if (fractal-&amp;gt;transformCommon.functionEnabledAxFalse&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        &amp;amp;&amp;amp; aux.i &amp;gt;= fractal-&amp;gt;transformCommon.startIterationsX&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        &amp;amp;&amp;amp; aux.i &amp;lt; fractal-&amp;gt;transformCommon.stopIterationsX)&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      z.x = fabs(z.x);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    if (fractal-&amp;gt;transformCommon.functionEnabledAyFalse&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        &amp;amp;&amp;amp; aux.i &amp;gt;= fractal-&amp;gt;transformCommon.startIterationsY&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        &amp;amp;&amp;amp; aux.i &amp;lt; fractal-&amp;gt;transformCommon.stopIterationsY)&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      z.y = fabs(z.y);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    if (fractal-&amp;gt;transformCommon.functionEnabledAzFalse&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        &amp;amp;&amp;amp; aux.i &amp;gt;= fractal-&amp;gt;transformCommon.startIterationsZ&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        &amp;amp;&amp;amp; aux.i &amp;lt; fractal-&amp;gt;transformCommon.stopIterationsZ)&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      z.z = fabs(z.z);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  double r = aux.r;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  double de1 = 0.0;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  double de2 = 0.0;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  double de3 = 0.0;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  double de4 = 0.0;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  CVector4 zer0s = CVector4(0.0, 0.0, 0.0, 0.0);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  CVector4 newZ1 = zer0s;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  CVector4 newZ2 = zer0s;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  CVector4 newZ3 = zer0s;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  CVector4 newZ4 = zer0s;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  double th0 = fractal-&amp;gt;bulb.betaAngleOffset;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  double ph0 = fractal-&amp;gt;bulb.alphaAngleOffset;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  if (!fractal-&amp;gt;transformCommon.functionEnabledxFalse)&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    th0 += asin(z.z / r);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    ph0 += atan2(z.y, z.x);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  else&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    th0 += acos(z.z / r);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    ph0 += atan(z.y / z.x);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  CVector4 w8ts = fractal-&amp;gt;transformCommon.offset1111;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  double rp = r;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  if (fractal-&amp;gt;transformCommon.functionEnabledx) // 0ne&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    newZ1 = z * w8ts.x;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    de1 = w8ts.x;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  if (fractal-&amp;gt;transformCommon.functionEnabledy) // two&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    de2 = (rp * aux.DE * 2.0 + 1.0) * w8ts.y;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    rp *= r;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    double th = th0 * 2.0 * fractal-&amp;gt;transformCommon.scaleA1;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    double ph = ph0 * 2.0 * fractal-&amp;gt;transformCommon.scaleB1;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    if (!fractal-&amp;gt;transformCommon.functionEnabledxFalse)&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      double costh = cos(th);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      newZ2 = rp * CVector4(costh * cos(ph), sin(ph) * costh, sin(th), 0.0);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    else&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      double sinth = sin(th);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      newZ2 = rp * CVector4(sinth * sin(ph), cos(ph) * sinth, cos(th), 0.0);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    newZ2 *= w8ts.y;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  if (fractal-&amp;gt;transformCommon.functionEnabledz) // three&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    rp = r * r;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    de3 = (rp * aux.DE * 3.0 + 1.0) * w8ts.z;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    rp *= r;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    double th = th0 * 3.0 * fractal-&amp;gt;transformCommon.scaleA1;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    double ph = ph0 * 3.0 * fractal-&amp;gt;transformCommon.scaleB1;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    if (!fractal-&amp;gt;transformCommon.functionEnabledxFalse)&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      double costh = cos(th);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      newZ3 = rp * CVector4(costh * cos(ph), sin(ph) * costh, sin(th), 0.0);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    else&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      double sinth = sin(th);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      newZ3 = rp * CVector4(sinth * sin(ph), cos(ph) * sinth, cos(th), 0.0);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    newZ3 *= w8ts.z;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  if (fractal-&amp;gt;transformCommon.functionEnabledw) // four&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    rp = r * r * r;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    de4 = (rp * aux.DE * 4.0 + 1.0) * w8ts.w;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    rp *= r;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    double th = th0 * 4.0 * fractal-&amp;gt;transformCommon.scaleA1;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    double ph = ph0 * 4.0 * fractal-&amp;gt;transformCommon.scaleB1;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    if (!fractal-&amp;gt;transformCommon.functionEnabledxFalse)&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      double costh = cos(th);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      newZ4 = rp * CVector4(costh * cos(ph), sin(ph) * costh, sin(th), 0.0);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    else&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      double sinth = sin(th);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      newZ4 = rp * CVector4(sinth * sin(ph), cos(ph) * sinth, cos(th), 0.0);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    newZ4 *= w8ts.w;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  z = newZ1 + newZ2 + newZ3 + newZ4;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  aux.DE = fabs(de1 + de2 + de3 + de4);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  if (fractal-&amp;gt;transformCommon.functionEnabledKFalse)&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    if (fractal-&amp;gt;transformCommon.functionEnabledDFalse&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        &amp;amp;&amp;amp; aux.i &amp;gt;= fractal-&amp;gt;transformCommon.startIterationsD&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        &amp;amp;&amp;amp; aux.i &amp;lt; fractal-&amp;gt;transformCommon.stopIterationsD)&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      swap(z.x, z.y);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    if (fractal-&amp;gt;transformCommon.functionEnabledEFalse&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        &amp;amp;&amp;amp; aux.i &amp;gt;= fractal-&amp;gt;transformCommon.startIterationsE&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        &amp;amp;&amp;amp; aux.i &amp;lt; fractal-&amp;gt;transformCommon.stopIterationsE)&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      swap(z.x, z.z);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    // swap&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    if (fractal-&amp;gt;transformCommon.functionEnabledBxFalse) z.x = -z.x;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    if (fractal-&amp;gt;transformCommon.functionEnabledByFalse) z.y = -z.y;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    if (fractal-&amp;gt;transformCommon.functionEnabledBzFalse) z.z = -z.z;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  z += fractal-&amp;gt;transformCommon.additionConstant000;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  if (fractal-&amp;gt;transformCommon.addCpixelEnabledFalse)&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    CVector4 tempC = c;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    if (fractal-&amp;gt;transformCommon.alternateEnabledFalse) // alternate&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      tempC = aux.c;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      switch (fractal-&amp;gt;mandelbulbMulti.orderOfXYZC)&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        case multi_OrderOfXYZ_xyz:&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        default: tempC = CVector4(tempC.x, tempC.y, tempC.z, tempC.w); break;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        case multi_OrderOfXYZ_xzy: tempC = CVector4(tempC.x, tempC.z, tempC.y, tempC.w); break;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        case multi_OrderOfXYZ_yxz: tempC = CVector4(tempC.y, tempC.x, tempC.z, tempC.w); break;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        case multi_OrderOfXYZ_yzx: tempC = CVector4(tempC.y, tempC.z, tempC.x, tempC.w); break;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        case multi_OrderOfXYZ_zxy: tempC = CVector4(tempC.z, tempC.x, tempC.y, tempC.w); break;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        case multi_OrderOfXYZ_zyx: tempC = CVector4(tempC.z, tempC.y, tempC.x, tempC.w); break;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      aux.c = tempC;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    else&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      switch (fractal-&amp;gt;mandelbulbMulti.orderOfXYZC)&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        case multi_OrderOfXYZ_xyz:&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        default: tempC = CVector4(c.x, c.y, c.z, c.w); break;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        case multi_OrderOfXYZ_xzy: tempC = CVector4(c.x, c.z, c.y, c.w); break;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        case multi_OrderOfXYZ_yxz: tempC = CVector4(c.y, c.x, c.z, c.w); break;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        case multi_OrderOfXYZ_yzx: tempC = CVector4(c.y, c.z, c.x, c.w); break;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        case multi_OrderOfXYZ_zxy: tempC = CVector4(c.z, c.x, c.y, c.w); break;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;        case multi_OrderOfXYZ_zyx: tempC = CVector4(c.z, c.y, c.x, c.w); break;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    z += tempC * fractal-&amp;gt;transformCommon.constantMultiplierC111;&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  }&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  // rotation&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  if (fractal-&amp;gt;transformCommon.functionEnabledRFalse&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      &amp;amp;&amp;amp; aux.i &amp;gt;= fractal-&amp;gt;transformCommon.startIterationsR&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;      &amp;amp;&amp;amp; aux.i &amp;lt; fractal-&amp;gt;transformCommon.stopIterationsR)&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  {&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;    z = fractal-&amp;gt;transformCommon.rotationMatrix.RotateVector(z);&lt;/span&gt;
&lt;span style=&quot;color:#2929cc&quot;&gt;  }*/&lt;/span&gt;
  &lt;span style=&quot;color:#2e8b57; font-weight:bold&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#676767&quot;&gt;(&lt;/span&gt;fractal&lt;span style=&quot;color:#676767&quot;&gt;-&amp;gt;&lt;/span&gt;analyticDE&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;enabledFalse&lt;span style=&quot;color:#676767&quot;&gt;)&lt;/span&gt;
    aux&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;DE &lt;span style=&quot;color:#676767&quot;&gt;=&lt;/span&gt; aux&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;DE &lt;span style=&quot;color:#676767&quot;&gt;*&lt;/span&gt; fractal&lt;span style=&quot;color:#676767&quot;&gt;-&amp;gt;&lt;/span&gt;analyticDE&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;scale1 &lt;span style=&quot;color:#676767&quot;&gt;+&lt;/span&gt; fractal&lt;span style=&quot;color:#676767&quot;&gt;-&amp;gt;&lt;/span&gt;analyticDE&lt;span style=&quot;color:#676767&quot;&gt;.&lt;/span&gt;offset0&lt;span style=&quot;color:#676767&quot;&gt;;&lt;/span&gt;
&lt;span style=&quot;color:#676767&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/body&gt;</string>
        </property>
        <property name="wordWrap">
         <bool>true</bool>
        </property>
        <property name="openExternalLinks">
         <bool>true</bool>
        </property>
        <property name="textInteractionFlags">
         <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByMouse</set>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
   <item>
    <spacer name="verticalSpacer">
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
     <property name="sizeHint" stdset="0">
      <size>
       <width>20</width>
       <height>40</height>
      </size>
     </property>
    </spacer>
   </item>
  </layout>
 </widget>
 <customwidgets>
  <customwidget>
   <class>MyGroupBox</class>
   <extends>QGroupBox</extends>
   <header>my_group_box.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>MyDoubleSpinBox</class>
   <extends>QDoubleSpinBox</extends>
   <header>my_double_spin_box.h</header>
  </customwidget>
  <customwidget>
   <class>MySpinBox</class>
   <extends>QSpinBox</extends>
   <header>my_spin_box.h</header>
  </customwidget>
  <customwidget>
   <class>MyCheckBox</class>
   <extends>QCheckBox</extends>
   <header>my_check_box.h</header>
  </customwidget>
 </customwidgets>
 <tabstops>
  <tabstop>checkBox_transf_function_enabledAx_false</tabstop>
  <tabstop>spinboxInt_transf_start_iterations_X</tabstop>
  <tabstop>spinboxInt_transf_stop_iterations_X</tabstop>
  <tabstop>checkBox_transf_function_enabledAy_false</tabstop>
  <tabstop>spinboxInt_transf_start_iterations_Y</tabstop>
  <tabstop>spinboxInt_transf_stop_iterations_Y</tabstop>
  <tabstop>checkBox_transf_function_enabledAz_false</tabstop>
  <tabstop>spinboxInt_transf_start_iterations_Z</tabstop>
  <tabstop>spinboxInt_transf_stop_iterations_Z</tabstop>
  <tabstop>spinbox3_transf_offset_000_x</tabstop>
  <tabstop>spinbox3_transf_offset_000_y</tabstop>
  <tabstop>spinbox3_transf_offset_000_z</tabstop>
  <tabstop>groupCheck_info</tabstop>
 </tabstops>
 <resources/>
 <connections/>
</ui>

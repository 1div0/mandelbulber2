/**
 * Mandelbulber v2, a 3D fractal generator  _%}}i*<.        ____                _______
 * Copyright (C) 2017 Mandelbulber Team   _>]|=||i=i<,     / __ \___  ___ ___  / ___/ /
 *                                        \><||i|=>>%)    / /_/ / _ \/ -_) _ \/ /__/ /__
 * This file is part of Mandelbulber.     )<=i=]=|=i<>    \____/ .__/\__/_//_/\___/____/
 * The project is licensed under GPLv3,   -<>>=|><|||`        /_/
 * see also COPYING file in this folder.    ~+{i%+++
 *
 * iteration weight. Influence fractal based on the weight of
 * Z values after different iterations
 */

/* ### This file has been autogenerated. Remove this line, to prevent override. ### */

REAL4 TransfIterationWeightIteration(REAL4 z, __constant sFractalCl *fractal, sExtendedAuxCl *aux)
{
	REAL4 zA = (aux->i == fractal->transformCommon.intA) ? z : (REAL4){};
	REAL4 zB = (aux->i == fractal->transformCommon.intB) ? z : (REAL4){};

	z = (z * fractal->transformCommon.scale) + (zA * fractal->transformCommon.offset)
			+ (zB * fractal->transformCommon.offset0);
	aux->DE *= fractal->transformCommon.scale;
	aux->r_dz *= fractal->transformCommon.scale;
	return z;
}
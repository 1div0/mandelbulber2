/**
 * Mandelbulber v2, a 3D fractal generator  _%}}i*<.        ____                _______
 * Copyright (C) 2017 Mandelbulber Team   _>]|=||i=i<,     / __ \___  ___ ___  / ___/ /
 *                                        \><||i|=>>%)    / /_/ / _ \/ -_) _ \/ /__/ /__
 * This file is part of Mandelbulber.     )<=i=]=|=i<>    \____/ .__/\__/_//_/\___/____/
 * The project is licensed under GPLv3,   -<>>=|><|||`        /_/
 * see also COPYING file in this folder.    ~+{i%+++
 *
 * Quaternion fractal
 * @reference http://www.fractalforums.com/3d-fractal-generation/true-3d-mandlebrot-type-fractal/
 */

/* ### This file has been autogenerated. Remove this line, to prevent override. ### */

#ifndef DOUBLE_PRECISION
inline void QuaternionIteration(float3 *z, float *w, sExtendedAuxCl *aux)
{
	aux->r_dz = aux->r_dz * 2.0f * aux->r;
	float newx = mad(-z->z, z->z, mad(z->x, z->x, -z->y * z->y)) - *w * *w;
	float newy = 2.0f * z->x * z->y;
	float newz = 2.0f * z->x * z->z;
	float neww = 2.0f * z->x * *w;
	z->x = newx;
	z->y = newy;
	z->z = newz;
	*w = neww;
}
#else
inline void QuaternionIteration(double3 *z, double *w, sExtendedAuxCl *aux)
{
	aux->r_dz = aux->r_dz * 2.0 * aux->r;
	double newx = mad(-z->z, z->z, mad(z->x, z->x, -z->y * z->y)) - *w * *w;
	double newy = 2.0 * z->x * z->y;
	double newz = 2.0 * z->x * z->z;
	double neww = 2.0 * z->x * *w;
	z->x = newx;
	z->y = newy;
	z->z = newz;
	*w = neww;
}
#endif

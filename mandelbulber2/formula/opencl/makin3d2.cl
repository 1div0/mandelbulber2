/**
 * Mandelbulber v2, a 3D fractal generator  _%}}i*<.        ____                _______
 * Copyright (C) 2017 Mandelbulber Team   _>]|=||i=i<,     / __ \___  ___ ___  / ___/ /
 *                                        \><||i|=>>%)    / /_/ / _ \/ -_) _ \/ /__/ /__
 * This file is part of Mandelbulber.     )<=i=]=|=i<>    \____/ .__/\__/_//_/\___/____/
 * The project is licensed under GPLv3,   -<>>=|><|||`        /_/
 * see also COPYING file in this folder.    ~+{i%+++
 *
 * Makin3D-2 found through the another shot at the holy grail topic at ff
 * @reference http://www.fractalforums.com/3d-fractal-generation/another-shot-at-the-holy-grail/
 */

/* ### This file has been autogenerated. Remove this line, to prevent override. ### */

#ifndef DOUBLE_PRECISION
void Makin3d2Iteration(float4 *z, __constant sFractalCl *fractal, sExtendedAuxCl *aux)
{
	Q_UNUSED(fractal);
	Q_UNUSED(aux);

	float x2 = z->x * z->x;
	float y2 = z->y * z->y;
	float z2 = z->z * z->z;
	float newx = mad(z->z, 2.0f * z->y, x2);
	float newy = mad(-z->z, 2.0f * z->x, -y2);
	float newz = mad(z->y, 2.0f * z->x, -z2);
	z->x = newx;
	z->y = newy;
	z->z = newz;
}
#else
void Makin3d2Iteration(double4 *z, __constant sFractalCl *fractal, sExtendedAuxCl *aux)
{
	Q_UNUSED(fractal);
	Q_UNUSED(aux);

	double x2 = z->x * z->x;
	double y2 = z->y * z->y;
	double z2 = z->z * z->z;
	double newx = x2 + 2.0 * z->y * z->z;
	double newy = -y2 - 2.0 * z->x * z->z;
	double newz = -z2 + 2.0 * z->x * z->y;
	z->x = newx;
	z->y = newy;
	z->z = newz;
}
#endif

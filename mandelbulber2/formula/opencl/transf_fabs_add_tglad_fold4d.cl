/**
 * Mandelbulber v2, a 3D fractal generator  _%}}i*<.        ____                _______
 * Copyright (C) 2017 Mandelbulber Team   _>]|=||i=i<,     / __ \___  ___ ___  / ___/ /
 *                                        \><||i|=>>%)    / /_/ / _ \/ -_) _ \/ /__/ /__
 * This file is part of Mandelbulber.     )<=i=]=|=i<>    \____/ .__/\__/_//_/\___/____/
 * The project is licensed under GPLv3,   -<>>=|><|||`        /_/
 * see also COPYING file in this folder.    ~+{i%+++
 *
 * fabs.  Add fabs constantV2,  z = fabs( z + constant) - fabs( z - constant) - z:
 */

/* ### This file has been autogenerated. Remove this line, to prevent override. ### */

#ifndef DOUBLE_PRECISION
float4 TransfFabsAddTgladFold4dIteration(
	float4 *z4D, __constant sFractalCl *fractal, sExtendedAuxCl *aux)
{
	Q_UNUSED(aux);

	*z4D = fabs(*z4D + fractal->transformCommon.additionConstant0000)
				 - fabs(*z4D - fractal->transformCommon.additionConstant0000) - *z4D;
	return z;
}
#else
double4 TransfFabsAddTgladFold4dIteration(
	double4 *z4D, __constant sFractalCl *fractal, sExtendedAuxCl *aux)
{
	Q_UNUSED(aux);

	*z4D = fabs(*z4D + fractal->transformCommon.additionConstant0000)
				 - fabs(*z4D - fractal->transformCommon.additionConstant0000) - *z4D;
	return z;
}
#endif
